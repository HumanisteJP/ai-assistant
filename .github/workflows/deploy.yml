name: Deploy Yata Agent

on:
  push:
    branches: [ main ]

env:
  REGION: asia-northeast1          # <-- Artifact Registry と VM を配置したリージョン
  REPOSITORY: yata-agent       # <-- Artifact Registry のリポジトリ名
  IMAGE_NAME: yata-agent       # <-- イメージ名 (Dockerfile)

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # Workload Identity Federation で必須

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Auth to GCP via WIF"
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"

      - name: "Set up gcloud CLI"
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: "${{ secrets.GCP_PROJECT_ID }}"
          # docker-credential-gcr はデフォルトで含まれているため追加コンポーネント指定は不要

      - name: "Configure Docker to use gcloud auth helper"
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: "Build & Push image"
        env:
          IMAGE_URI: "${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}"
        run: |
          docker build -t $IMAGE_URI:${{ github.sha }} -f Dockerfile .
          docker tag $IMAGE_URI:${{ github.sha }} $IMAGE_URI:latest
          docker push $IMAGE_URI:${{ github.sha }}
          docker push $IMAGE_URI:latest

  rollout:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: "Auth to GCP via WIF"
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"

      # ─────────────────────────────────────────────
      # ① Secret Manager → Actions Runner (.env 作成)
      # ─────────────────────────────────────────────
      - name: "Fetch Secrets & create .env"
        id: envfile
        run: |
          DISCORD=$(gcloud secrets versions access latest --secret=discord-token)
          OPENAI=$(gcloud secrets versions access latest --secret=openai-key)
          cat <<EOF > /tmp/yata-env
          DISCORD_TOKEN=$DISCORD
          OPENAI_API_KEY=$OPENAI
          REGION=${{ env.REGION }}
          GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}
          EOF
          chmod 600 /tmp/yata-env

      # ─────────────────────────────────────────────
      # ② .env を VM へ転送（/tmp → sudo mv 方式）
      # ─────────────────────────────────────────────
      - name: "Copy .env to VM (/tmp)"
        run: |
          gcloud compute scp /tmp/yata-env ${{ secrets.GCP_VM_NAME }}:/tmp/yata-env \
            --zone=${{ secrets.GCP_ZONE }} --quiet

      # ②b docker-compose.yml を VM へ転送（/tmp 経由）
      - name: "Copy docker-compose.yml to VM (/tmp)"
        run: |
          gcloud compute scp docker-compose.yml ${{ secrets.GCP_VM_NAME }}:/tmp/docker-compose.yml \
            --zone=${{ secrets.GCP_ZONE }} --quiet

      # ③ /tmp から /opt/yata へ配置（sudo 権限で移動し所有権を調整）
      - name: "Move .env into /opt/yata (sudo)"
        run: |
          gcloud compute ssh ${{ secrets.GCP_VM_NAME }} --zone=${{ secrets.GCP_ZONE }} --quiet --command "\
            sudo mv /tmp/yata-env /opt/yata/.env && \
            sudo chown yata:yata /opt/yata/.env && \
            sudo chmod 600 /opt/yata/.env"

      # ③b compose ファイルも配置
      - name: "Move docker-compose.yml into /opt/yata (sudo)"
        run: |
          gcloud compute ssh ${{ secrets.GCP_VM_NAME }} --zone=${{ secrets.GCP_ZONE }} --quiet --command "\
            sudo mv /tmp/docker-compose.yml /opt/yata/docker-compose.yml && \
            sudo chown yata:yata /opt/yata/docker-compose.yml"

      # ─────────────────────────────────────────────
      # ④ コンテナを pull & compose up -d
      # ─────────────────────────────────────────────
      - name: "Rollout latest container"
        run: |
          gcloud compute ssh ${{ secrets.GCP_VM_NAME }} \
            --zone=${{ secrets.GCP_ZONE }} --quiet --command "\
              sudo gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet && \
              cd /opt/yata && \
              sudo docker pull ${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest && \
              sudo docker compose --env-file .env pull && \
              sudo docker compose --env-file .env up -d" 